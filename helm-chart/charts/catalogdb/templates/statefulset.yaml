apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: catalogdb
  namespace: {{ .Values.namespace }}
  labels:
    app: catalogdb
spec:
  serviceName: {{ .Values.service.headlessName }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: catalogdb
  template:
    metadata:
      labels:
        app: catalogdb
    spec:
      securityContext:
        fsGroup: 999
      containers:
      - name: catalogdb
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - containerPort: {{ .Values.service.port }}
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: catalogdb-secrets
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: catalogdb-secrets
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            value: {{ .Values.postgres.db }}
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust
        securityContext:
          runAsUser: 999
        volumeMounts:
          - name: pg-data
            mountPath: /var/lib/postgresql/data
          - name: init-db
            mountPath: /docker-entrypoint-initdb.d/init-db.sh
            subPath: init-db.sh
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres", "-d", "catalogdb"]
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 5
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres", "-d", "catalogdb"]
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
      volumes:
        - name: pg-data
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.name }}
        - name: init-db
          configMap:
            name: catalogdb-config
            items:
              - key: init-db.sh
                path: init-db.sh
